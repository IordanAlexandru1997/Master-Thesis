name: Docker Build and Deploy

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adopt'

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: alexandru1997/my-spring-thesis:latest
        
    - name: Setup WireGuard
      run: |
        sudo apt-get update
        sudo apt-get install -y wireguard-tools resolvconf
        echo "${{ secrets.WIREGUARD_CONFIG }}" > wg0.conf
        sudo wg-quick up ./wg0.conf

    - name: Deploy to server
      env:
        DEPLOY_SERVER: 141.26.157.78
        DEPLOY_USER: alex
        PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
        PASSPHRASE: ${{ secrets.SERVER_SSH_KEY_PASSPHRASE }}
      run: |
        # Install SSH client
        sudo apt-get install -y openssh-client

        # Write the SSH private key from secrets to a file
        echo "$PRIVATE_KEY" > private_key.pem
        chmod 600 private_key.pem

        # Push Docker image to server
        docker save alexandru1997/my-spring-thesis:latest | ssh -o "StrictHostKeyChecking=no" -i private_key.pem -p 22 $DEPLOY_USER@$DEPLOY_SERVER "docker load"

        # Clean up
        rm -f private_key.pem

    - name: Tear down WireGuard
      run: sudo wg-quick down wg0
